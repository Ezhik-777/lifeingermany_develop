{"remainingRequest":"/Users/evgenij/Desktop/dev/lifeingermany_develop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/evgenij/Desktop/dev/lifeingermany_develop/src/components/Pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/evgenij/Desktop/dev/lifeingermany_develop/src/components/Pagination.vue","mtime":1586395411727},{"path":"/Users/evgenij/Desktop/dev/lifeingermany_develop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/evgenij/Desktop/dev/lifeingermany_develop/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/evgenij/Desktop/dev/lifeingermany_develop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/evgenij/Desktop/dev/lifeingermany_develop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    baseUrl: String,\n    currentPage: Number,\n    totalPages: Number,\n    maxVisibleButtons: {\n      type: Number,\n      required: false,\n      default: 3\n    }\n  },\n  methods: {\n    isFirstPage(currentPage, totalPages) {\n        return currentPage == 1;\n    },\n    isLastPage(currentPage, totalPages) {\n        return currentPage == totalPages;\n    },\n    isCurrentPage(currentPage, pageElement) {\n        return currentPage == pageElement;\n    },\n    nextPage(currentPage, totalPages) {\n      return `${this.baseUrl}/${currentPage + 1}`;\n    },\n    previousPage(currentPage, totalPages) {\n      return currentPage === 2\n        ? `${this.baseUrl}/`\n        : `${this.baseUrl}/${currentPage - 1}`;\n    }\n  },\n  computed: {\n    startPage() {\n      if (this.currentPage === 1) {\n        return 1;\n      }\n      if (this.currentPage === this.totalPages) {\n        return this.currentPage - 1;\n      }\n      return this.currentPage - 1;\n    },\n    pages() {\n      const range = [];\n      for (\n        let i = this.startPage;\n        i <=\n        Math.min(this.startPage + this.maxVisibleButtons - 1, this.totalPages);\n        i += 1\n      ) {\n        range.push({\n          name: i,\n          isDisabled: i === this.currentPage,\n          link: i === 1 ? `${this.baseUrl}/` : `${this.baseUrl}/${i}`\n        });\n      }\n      return range;\n    }\n  }\n};\n",null]}